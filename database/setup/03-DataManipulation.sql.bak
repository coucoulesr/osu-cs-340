-- Many of the data manipulation queries shown here will use variable input from the user
-- or from the backend of the database. Where this is the case we have marked the input with 
-- a leading colon ':' and used generic terms to describe the input


-------- STUDENTS --------

-- Add Student
INSERT INTO Students (first_name, last_name, pin)
VALUES (:fnameInput, :lnameInput, :pinInput);

-- Update Student
UPDATE Students
SET first_name = :updatedFname, last_name = :updatedLname, pin = :updatedPin
WHERE id = :studentId;


--------CLASSES --------

-- Add class
INSERT INTO Classes (title, subject, course_number, section)
VALUES (:titleInput, :subjectInput, :numInput, :sectionInput);  

-- Update class
UPDATE Classes 
SET title = :newTitle, subject = :newSubject, course_number = :newCourseNum, section = :newSection
WHERE id = :classToUpdate;

-- Delete Class
DELETE FROM Classes WHERE id = :classToDelete


-------- ASSIGNMENTS --------

-- Add Assignment
INSERT INTO Assignments (class_id, title)
VALUES (:classInput, :titleInput);

-- Update Assignment
UPDATE Assignments
SET class_id = :newClass, title = :newTitle
WHERE id = :assignmentId;


-------- RATINGS --------

-- Add Rating
INSERT INTO Ratings (score, category, assignment_id, author_id) 
VALUES (:scoreInput, :categoryInput, :assignmentInput, :authorInput);

-- Update Rating
UPDATE Ratings SET score = :newScore WHERE assignment_id = :currentAssignment AND author_id = :currentStudent AND category = :currentqCategory;

-- Remove Rating
DELETE FROM Ratings WHERE assignment_id = :currentAssignment AND author_id = :currentStudent AND category = :currentCategory;

-- Select Ratings to display on score sliders
SELECT category, SUM(score) as total_score FROM ratings WHERE assignment_id = :currentAssignment GROUP BY category;


-------- COMMENTS --------

-- Add Comment
INSERT INTO Comments (body, created, author_id, assignment_id)
VALUES (:bodyInput, :currentDatetime, :authorInput, assignmentInput);

-- Update Comment
UPDATE Comments
SET body = :newBody, created = :currentDatetime, author = :newAuthor, assignment = :newAssignment
WHERE id = :commentId;

-- Delete Comment
DELETE FROM Comments
WHERE id = :commentId;


-------- VOTES --------

-- Add Vote
INSERT INTO Votes (student_id, comment_id, value) 
VALUES (:studentInput, :commentInput, :valueInput);

-- Update Vote
UPDATE Votes SET value = :newValue WHERE student_id = :currentStudent AND comment_id = :currentComment;

-- Remove Vote
DELETE FROM Votes WHERE student_id = :currentStudent AND comment_id = :selectedComment;

-- Get total votes for a comment
SELECT SUM(value) as total_score FROM Votes WHERE comment_id = :selectedComment;

-- Get user's vote on a comment
SELECT value FROM Votes WHERE student_id = :currentStudent AND comment_id = :selectedComment;
